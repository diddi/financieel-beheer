name: Deploy Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Prepare files for deployment
      run: |
        # Eenvoudige approach: alles in één map
        mkdir -p deploy_all
        
        # Kopieer alle bestanden (ook de niet-publieke bestanden) naar de root
        cp -r api controllers core cron database helpers models services views vendor autoload.php composer.json composer.lock config setup.php setup_demo.php deploy_all/
        
        # Kopieer public bestanden ook naar de root
        cp -r public/* deploy_all/
        
        # Maak database.php bestand
        mkdir -p deploy_all/config
        echo '<?php' > deploy_all/config/database.php
        echo '// Database configuratie' >> deploy_all/config/database.php
        echo 'return [' >> deploy_all/config/database.php
        echo "    'host' => 'localhost'," >> deploy_all/config/database.php
        echo "    'username' => 'db_gebruiker', // Wijzig naar je database gebruiker" >> deploy_all/config/database.php
        echo "    'password' => 'db_wachtwoord', // Wijzig naar je database wachtwoord" >> deploy_all/config/database.php
        echo "    'database' => 'db_naam', // Wijzig naar je database naam" >> deploy_all/config/database.php
        echo "    'port' => 3306," >> deploy_all/config/database.php
        echo "    'charset' => 'utf8mb4'," >> deploy_all/config/database.php
        echo "    'options' => [" >> deploy_all/config/database.php
        echo "        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION," >> deploy_all/config/database.php
        echo "        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC," >> deploy_all/config/database.php
        echo "        PDO::ATTR_EMULATE_PREPARES => false," >> deploy_all/config/database.php
        echo "    ]" >> deploy_all/config/database.php
        echo "];" >> deploy_all/config/database.php
        
        # Pas autoload.php aan om te werken met de nieuwe mapstructuur
        # Eerst backup maken van originele
        cp deploy_all/autoload.php deploy_all/autoload.php.bak
        
        # Nieuw autoload bestand maken
        echo '<?php' > deploy_all/autoload.php
        echo '// Aangepaste autoloader voor correcte mapstructuur' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '// Definieer het root pad' >> deploy_all/autoload.php
        echo 'define("ROOT_PATH", __DIR__);' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '// Registreer de autoloader functie' >> deploy_all/autoload.php
        echo 'spl_autoload_register(function($className) {' >> deploy_all/autoload.php
        echo '    // Vervang namespace separators met directory separators' >> deploy_all/autoload.php
        echo '    $path = str_replace("\\\\", DIRECTORY_SEPARATOR, $className);' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '    // Verwijder de App\ namespace prefix' >> deploy_all/autoload.php
        echo '    $path = str_replace("App" . DIRECTORY_SEPARATOR, "", $path);' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '    // Bepaal het volledige pad naar het bestand' >> deploy_all/autoload.php
        echo '    $filePath = ROOT_PATH . DIRECTORY_SEPARATOR . strtolower($path) . ".php";' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '    // Log voor debugging' >> deploy_all/autoload.php
        echo '    if (file_exists($filePath)) {' >> deploy_all/autoload.php
        echo '        require_once $filePath;' >> deploy_all/autoload.php
        echo '    } else {' >> deploy_all/autoload.php
        echo '        // Log welke bestanden niet worden gevonden voor debugging' >> deploy_all/autoload.php
        echo '        file_put_contents(' >> deploy_all/autoload.php
        echo '            __DIR__ . "/autoload_errors.log",' >> deploy_all/autoload.php
        echo '            date("Y-m-d H:i:s") . " - Kon bestand niet vinden: $filePath voor class $className\\n",' >> deploy_all/autoload.php
        echo '            FILE_APPEND' >> deploy_all/autoload.php
        echo '        );' >> deploy_all/autoload.php
        echo '    }' >> deploy_all/autoload.php
        echo '});' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '// Controleer of we nog andere bestanden moeten includen' >> deploy_all/autoload.php
        echo '// Composer autoloader als die gebruikt wordt' >> deploy_all/autoload.php
        echo 'if (file_exists(ROOT_PATH . "/vendor/autoload.php")) {' >> deploy_all/autoload.php
        echo '    require_once ROOT_PATH . "/vendor/autoload.php";' >> deploy_all/autoload.php
        echo '}' >> deploy_all/autoload.php
        echo '' >> deploy_all/autoload.php
        echo '// Helper functie om namespaces uit te debuggen (voor troubleshooting)' >> deploy_all/autoload.php
        echo 'function get_declared_namespaces() {' >> deploy_all/autoload.php
        echo '    $classes = get_declared_classes();' >> deploy_all/autoload.php
        echo '    $namespaces = [];' >> deploy_all/autoload.php
        echo '    ' >> deploy_all/autoload.php
        echo '    foreach ($classes as $class) {' >> deploy_all/autoload.php
        echo '        $parts = explode("\\\\", $class);' >> deploy_all/autoload.php
        echo '        array_pop($parts); // Verwijder de class naam' >> deploy_all/autoload.php
        echo '        $namespace = implode("\\\\", $parts);' >> deploy_all/autoload.php
        echo '        ' >> deploy_all/autoload.php
        echo '        if (!empty($namespace)) {' >> deploy_all/autoload.php
        echo '            $namespaces[$namespace] = true;' >> deploy_all/autoload.php
        echo '        }' >> deploy_all/autoload.php
        echo '    }' >> deploy_all/autoload.php
        echo '    ' >> deploy_all/autoload.php
        echo '    return array_keys($namespaces);' >> deploy_all/autoload.php
        echo '}' >> deploy_all/autoload.php
        
        # Controleer of de core map en controller bestand er zijn
        echo "Controleren of core/controller.php bestaat:"
        ls -la deploy_all/core/
        
        # Maak eenvoudige test.php voor debug
        echo '<?php' > deploy_all/test.php
        echo "echo '<h1>Basis PHP Test</h1>';" >> deploy_all/test.php
        echo "echo 'Huidige map: ' . __DIR__;" >> deploy_all/test.php
        echo "echo '<br>PHP Versie: ' . phpversion();" >> deploy_all/test.php
        
        # Maak info.php bestand voor debugging 
        echo '<?php' > deploy_all/info.php
        echo '// Debug informatie' >> deploy_all/info.php
        echo "echo '<h1>PHP Info</h1>';" >> deploy_all/info.php
        echo "echo '<h2>PHP Versie</h2>';" >> deploy_all/info.php
        echo "echo phpversion();" >> deploy_all/info.php
        echo "echo '<h2>Bestanden en mappen controle</h2>';" >> deploy_all/info.php
        echo "echo '<pre>';" >> deploy_all/info.php
        echo "echo 'Autoload bestand aanwezig: ' . (file_exists(__DIR__ . '/autoload.php') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Core map aanwezig: ' . (is_dir(__DIR__ . '/core') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Controllers map aanwezig: ' . (is_dir(__DIR__ . '/controllers') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Models map aanwezig: ' . (is_dir(__DIR__ . '/models') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Views map aanwezig: ' . (is_dir(__DIR__ . '/views') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Config map aanwezig: ' . (is_dir(__DIR__ . '/config') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo 'Database configuratie aanwezig: ' . (file_exists(__DIR__ . '/config/database.php') ? 'JA' : 'NEE') . PHP_EOL;" >> deploy_all/info.php
        echo "echo '</pre>';" >> deploy_all/info.php
        echo "phpinfo();" >> deploy_all/info.php
        
        # Maak een index_debug.php bestand voor geavanceerde debugging
        echo '<?php' > deploy_all/index_debug.php
        echo "// Schakel error reporting in" >> deploy_all/index_debug.php
        echo "ini_set('display_errors', 1);" >> deploy_all/index_debug.php
        echo "ini_set('display_startup_errors', 1);" >> deploy_all/index_debug.php
        echo "error_reporting(E_ALL);" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "echo '<h1>App Debug</h1>';" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "// Test of autoload werkt" >> deploy_all/index_debug.php
        echo "echo '<h2>Autoload test</h2>';" >> deploy_all/index_debug.php
        echo "try {" >> deploy_all/index_debug.php
        echo "    require_once 'autoload.php';" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:green\">✓ Autoload succesvol geladen</div>';" >> deploy_all/index_debug.php
        echo "} catch (Exception \$e) {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:red\">✗ Autoload error: ' . \$e->getMessage() . '</div>';" >> deploy_all/index_debug.php
        echo "}" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "// Test of de Controller class bestaat" >> deploy_all/index_debug.php
        echo "echo '<h2>Controller Class Test</h2>';" >> deploy_all/index_debug.php
        echo "if (file_exists('core/controller.php')) {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:green\">✓ core/controller.php bestand gevonden</div>';" >> deploy_all/index_debug.php
        echo "    echo '<pre>Bestandsinhoud:<br>' . htmlspecialchars(file_get_contents('core/controller.php')) . '</pre>';" >> deploy_all/index_debug.php
        echo "} else {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:red\">✗ core/controller.php bestand niet gevonden</div>';" >> deploy_all/index_debug.php
        echo "}" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "try {" >> deploy_all/index_debug.php
        echo "    // Probeer Controller class handmatig te laden" >> deploy_all/index_debug.php
        echo "    if (!class_exists('\\\\App\\\\Core\\\\Controller')) {" >> deploy_all/index_debug.php
        echo "        require_once 'core/controller.php';" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:green\">✓ Controller class handmatig geladen</div>';" >> deploy_all/index_debug.php
        echo "    } else {" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:green\">✓ Controller class al geladen door autoloader</div>';" >> deploy_all/index_debug.php
        echo "    }" >> deploy_all/index_debug.php
        echo "} catch (Exception \$e) {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:red\">✗ Error bij laden van Controller class: ' . \$e->getMessage() . '</div>';" >> deploy_all/index_debug.php
        echo "}" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "// Test database connectie" >> deploy_all/index_debug.php
        echo "echo '<h2>Database connectie test</h2>';" >> deploy_all/index_debug.php
        echo "try {" >> deploy_all/index_debug.php
        echo "    \$dbConfig = require_once 'config/database.php';" >> deploy_all/index_debug.php
        echo "    echo '<div>Database configuratie:</div>';" >> deploy_all/index_debug.php
        echo "    echo '<pre>';" >> deploy_all/index_debug.php
        echo "    // Wachtwoord verbergen in de output" >> deploy_all/index_debug.php
        echo "    \$configForDisplay = \$dbConfig;" >> deploy_all/index_debug.php
        echo "    \$configForDisplay['password'] = '********';" >> deploy_all/index_debug.php
        echo "    print_r(\$configForDisplay);" >> deploy_all/index_debug.php
        echo "    echo '</pre>';" >> deploy_all/index_debug.php
        echo "    " >> deploy_all/index_debug.php
        echo "    // Probeer verbinding te maken" >> deploy_all/index_debug.php
        echo "    \$dsn = \"mysql:host={\$dbConfig['host']};dbname={\$dbConfig['database']};charset={\$dbConfig['charset']}\";" >> deploy_all/index_debug.php
        echo "    \$pdo = new PDO(\$dsn, \$dbConfig['username'], \$dbConfig['password'], \$dbConfig['options']);" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:green\">✓ Database verbinding succesvol</div>';" >> deploy_all/index_debug.php
        echo "} catch (Exception \$e) {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:red\">✗ Database error: ' . \$e->getMessage() . '</div>';" >> deploy_all/index_debug.php
        echo "}" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "// Test of de core classes laden" >> deploy_all/index_debug.php
        echo "echo '<h2>Core classes test</h2>';" >> deploy_all/index_debug.php
        echo "try {" >> deploy_all/index_debug.php
        echo "    if (class_exists('\\\\App\\\\Core\\\\Router')) {" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:green\">✓ Router class bestaat</div>';" >> deploy_all/index_debug.php
        echo "    } else {" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:red\">✗ Router class niet gevonden</div>';" >> deploy_all/index_debug.php
        echo "    }" >> deploy_all/index_debug.php
        echo "    " >> deploy_all/index_debug.php
        echo "    if (class_exists('\\\\App\\\\Core\\\\Controller')) {" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:green\">✓ Controller class bestaat</div>';" >> deploy_all/index_debug.php
        echo "    } else {" >> deploy_all/index_debug.php
        echo "        echo '<div style=\"color:red\">✗ Controller class niet gevonden</div>';" >> deploy_all/index_debug.php
        echo "    }" >> deploy_all/index_debug.php
        echo "} catch (Exception \$e) {" >> deploy_all/index_debug.php
        echo "    echo '<div style=\"color:red\">✗ Error bij laden van classes: ' . \$e->getMessage() . '</div>';" >> deploy_all/index_debug.php
        echo "}" >> deploy_all/index_debug.php
        echo "" >> deploy_all/index_debug.php
        echo "echo '<h2>Index.php bekijken</h2>';" >> deploy_all/index_debug.php
        echo "echo '<pre>';" >> deploy_all/index_debug.php
        echo "echo htmlspecialchars(file_get_contents('index.php'));" >> deploy_all/index_debug.php
        echo "echo '</pre>';" >> deploy_all/index_debug.php
        
        # Maak nieuwe, zeer eenvoudige .htaccess
        echo 'RewriteEngine On' > deploy_all/.htaccess
        echo 'RewriteBase /' >> deploy_all/.htaccess
        echo '' >> deploy_all/.htaccess
        echo '# Alleen redirect naar index.php als bestand of directory niet bestaat' >> deploy_all/.htaccess
        echo 'RewriteCond %{REQUEST_FILENAME} !-f' >> deploy_all/.htaccess
        echo 'RewriteCond %{REQUEST_FILENAME} !-d' >> deploy_all/.htaccess
        echo 'RewriteRule ^(.*)$ index.php [QSA,L]' >> deploy_all/.htaccess
        echo '' >> deploy_all/.htaccess
        echo '# Schakel PHP error reporting in voor debugging' >> deploy_all/.htaccess
        echo 'php_flag display_errors on' >> deploy_all/.htaccess
        echo 'php_value error_reporting E_ALL' >> deploy_all/.htaccess
        
        # Toon de uiteindelijke structuur
        echo "Inhoud van deploy_all/:"
        ls -la deploy_all/
    
    - name: FTP Deploy All Files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: /
        local-dir: ./deploy_all/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .env
          README.md
          .DS_Store

# Hoe te gebruiken:
# 1. Ga naar je GitHub repository
# 2. Klik op Settings > Secrets and variables > Actions
# 3. Voeg de volgende repository secrets toe:
#    - FTP_SERVER: ftp.sunshine.be
#    - FTP_USERNAME: jouw-ftp-gebruikersnaam
#    - FTP_PASSWORD: jouw-ftp-wachtwoord
# 4. Deze workflow uploadt alles naar de public_html map om te testen!