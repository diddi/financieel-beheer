name: Deploy Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Prepare files for deployment
      run: |
        # Script om de structuur aan te passen voor deployment
        mkdir -p deploy_tmp
        
        # Kopieer alle bestanden behalve public/ naar de deploy_tmp map
        cp -r api controllers core cron database helpers models services views vendor autoload.php composer.json composer.lock config setup.php setup_demo.php deploy_tmp/
        
        # Kopieer inhoud van public/ naar de root van deploy_tmp
        cp -r public/* deploy_tmp/
        
        # Controleer of config/database.example.php bestaat en kopieer naar database.php indien nodig
        if [ -f "config/database.example.php" ]; then
          echo "Kopieren van database.example.php naar database.php"
          cp config/database.example.php deploy_tmp/config/database.php
        else
          # Maak een database.php voorbeeld bestand aan als het niet bestaat
          echo "Maken van een voorbeeld database.php bestand"
          mkdir -p deploy_tmp/config
          cat > deploy_tmp/config/database.php << 'EOL'
<?php
// Database configuratie
return [
    'host' => 'localhost',
    'username' => 'db_gebruiker', // Wijzig naar je database gebruiker
    'password' => 'db_wachtwoord', // Wijzig naar je database wachtwoord
    'database' => 'db_naam', // Wijzig naar je database naam
    'port' => 3306,
    'charset' => 'utf8mb4',
    'options' => [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES => false,
    ]
];
EOL
        fi
        
        # Maak een testbestand voor debugging
        echo "Maken van info.php voor debugging"
        cat > deploy_tmp/info.php << 'EOL'
<?php
// Debug informatie
echo '<h1>PHP Info</h1>';
echo '<h2>PHP Versie</h2>';
echo phpversion();

echo '<h2>Bestanden en mappen controle</h2>';
echo '<pre>';
echo 'Autoload bestand aanwezig: ' . (file_exists(__DIR__ . '/autoload.php') ? 'JA' : 'NEE') . "\n";
echo 'Core map aanwezig: ' . (is_dir(__DIR__ . '/core') ? 'JA' : 'NEE') . "\n";
echo 'Controllers map aanwezig: ' . (is_dir(__DIR__ . '/controllers') ? 'JA' : 'NEE') . "\n";
echo 'Models map aanwezig: ' . (is_dir(__DIR__ . '/models') ? 'JA' : 'NEE') . "\n";
echo 'Views map aanwezig: ' . (is_dir(__DIR__ . '/views') ? 'JA' : 'NEE') . "\n";
echo 'Config map aanwezig: ' . (is_dir(__DIR__ . '/config') ? 'JA' : 'NEE') . "\n";
echo 'Database configuratie aanwezig: ' . (file_exists(__DIR__ . '/config/database.php') ? 'JA' : 'NEE') . "\n";
echo '</pre>';

echo '<h2>Bestandsrechten</h2>';
echo '<pre>';
$files = [
    'autoload.php',
    'config',
    'config/database.php',
    'core',
    'controllers',
    'models',
    'views'
];
foreach ($files as $file) {
    $path = __DIR__ . '/' . $file;
    if (file_exists($path)) {
        echo $file . ': ' . substr(sprintf('%o', fileperms($path)), -4) . "\n";
    } else {
        echo $file . ': NIET GEVONDEN' . "\n";
    }
}
echo '</pre>';

// Volledige phpinfo voor geavanceerde debugging
phpinfo();
EOL
        
        # Toon de uiteindelijke structuur
        echo "Inhoud van deploy_tmp:"
        ls -la deploy_tmp/
        echo "Inhoud van deploy_tmp/config:"
        ls -la deploy_tmp/config/
    
    - name: FTP Deploy Full Structure
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: /
        local-dir: ./deploy_tmp/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .env
          README.md
          .DS_Store

# Hoe te gebruiken:
# 1. Ga naar je GitHub repository
# 2. Klik op Settings > Secrets and variables > Actions
# 3. Voeg de volgende repository secrets toe:
#    - FTP_SERVER: ftp.sunshine.be
#    - FTP_USERNAME: jouw-ftp-gebruikersnaam
#    - FTP_PASSWORD: jouw-ftp-wachtwoord
# 4. Deze workflow uploadt je volledige applicatie met de juiste structuur!